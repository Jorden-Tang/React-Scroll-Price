{"version":3,"sources":["views/HomePage.js","views/AdminPage.js","components/AdminLoginForm.js","views/AdminLoginPage.js","views/NotFoundPage.js","App.js","serviceWorker.js","index.js","logo.svg","static/images/Mushroom.png","static/images/Slime.png"],"names":["HomePage","props","useState","scrolls","scrollData","setScrollData","useEffect","axios","get","withCredentials","then","result","data","catch","console","log","length","className","src","require","style","display","flexDirection","justifyContent","id","fontSize","color","Container","fluid","Row","map","percent","Col","Table","size","striped","hover","variant","filter","scroll","scrollSuccessRate","scrollStat","v","i","key","updatedAt","Date","now","scrollEquipment","scrollPrice","toFixed","Math","floor","AdminPage","setData","onInputHandler","e","preventDefault","a","slice","target","name","value","sendApiRequest","post","FormControl","class","width","height","TextField","label","onChange","Button","href","onClick","forEach","item","index","email","password","errors","state","setState","error","setError","auth","setAuth","onInputChangeHandler","event","x","onSubmit","err","isAuth","navigate","for","type","aria-describedby","NotFound","App","path","default","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.c829dc8d.chunk.js","sourcesContent":["import React ,{useState, useEffect}from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Container from 'react-bootstrap/Container'\r\nimport \"../static/css/HomePage.css\"\r\nimport axios from 'axios'\r\nconst HomePage = (props) => {\r\n    const [scrollData, setScrollData] = useState({scrolls: []});\r\n    const percentArray = [10, 30, 60, 70, 100];\r\n\r\n    function sendApiRequest(data) {\r\n        return axios.get(\"http://localhost:8000/api/scroll\", {}, {withCredentials: true});\r\n    }\r\n\r\n    useEffect(()=>{\r\n        sendApiRequest()\r\n            .then((result)=>{\r\n                setScrollData({scrolls: result.data.result});\r\n            })\r\n            .catch(console.log(\"WTF\"))\r\n    }, [])\r\n    if(scrollData.scrolls.length === 0){\r\n        return(<p>Loading</p>)\r\n    }\r\n    return(\r\n        <div className = \"body\">\r\n        <div className = \"header\">\r\n            <img className = \"header_img\" src = {require(\"../static/images/Mushroom.png\")}></img>\r\n            <div style= {{display: \"flex\", flexDirection: \"column\", justifyContent: \"space-around\"} }>\r\n                <h1>Fruit's Scroll Side</h1>\r\n                <div id = \"timeStampNote\" style = {{fontSize: \"2vw\", display: \"flex\", justifyContent: \"space-around\"}} >\r\n                <span><span style = {{color: \"#ff0066\"}}>Red</span>(OLD AF!)</span> \r\n                <span></span>\r\n                <span><span style = {{color: \"#66ff00\"}}>Green</span>(Fressshhh!)</span>\r\n                </div>\r\n              \r\n            </div>\r\n            <img className = \"header_img\"  src = {require(\"../static/images/Slime.png\")}></img>\r\n        </div>\r\n        <Container fluid>\r\n        <Row>\r\n            {percentArray.map((percent)=> [\r\n            <Col>\r\n            <Table size=\"sm\"  striped  hover variant = \"dark\">\r\n                <thead>\r\n                <h1>{percent}%</h1>\r\n                    <tr>\r\n                        <th>Equip</th>\r\n                        <th>Stat</th>\r\n                        <th>Min</th>\r\n                        <th>Mid</th>\r\n                        <th>Max</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {(scrollData.scrolls).filter(scroll=> scroll.scrollSuccessRate === percent && scroll.scrollStat != \"misc\").map((v, i) =>\r\n               [\r\n                <tr key = {i} style ={v.updatedAt < new Date(Date.now() - 7 * 24 * 60 * 60 * 1000) ? {color: \"ff0066\", fontSize: \"1rem\"} : {color: \"#66ff00\", fontSize: \"1.2rem\"}}>\r\n                <td>{v.scrollEquipment}</td>\r\n                <td>{v.scrollStat}</td>\r\n                {v.scrollPrice[0] < 1000000 ? <td>{(v.scrollPrice[0]/1000).toFixed(1) + \"K\"}</td> : <td>{(v.scrollPrice[0]/1000000).toFixed(1) + \"M\"}</td> }\r\n                {v.scrollPrice[Math.floor((v.scrollPrice.length - 1)/2)] < 1000000 ? <td>{(v.scrollPrice[Math.floor((v.scrollPrice.length - 1)/2)]/1000).toFixed(1) + \"K\"}</td> : <td>{(v.scrollPrice[Math.floor((v.scrollPrice.length - 1)/2)]/1000000).toFixed(1) + \"M\"}</td> }\r\n                {v.scrollPrice[v.scrollPrice.length - 1] < 1000000 ? <td>{(v.scrollPrice[v.scrollPrice.length - 1]/1000).toFixed(1) + \"K\"}</td> : <td>{(v.scrollPrice[v.scrollPrice.length - 1]/1000000).toFixed(1) + \"M\"}</td> } \r\n                </tr>\r\n               ]\r\n            )}\r\n                </tbody>\r\n            </Table>\r\n        </Col>\r\n            ])}\r\n\r\n            <Col>\r\n                <Table size=\"sm\"  striped  hover variant = \"dark\"> \r\n                    <thead>\r\n                        <h1>Misc</h1>\r\n                        <tr>\r\n                            <th>Equip</th>\r\n                            <th>Stat</th>\r\n                            <th>Min</th>\r\n                            <th>Mid</th>\r\n                            <th>Max</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {(scrollData.scrolls).filter(scroll=> scroll.scrollStat == \"misc\").map((v, i) =>\r\n                            [\r\n                                <tr key = {i} style ={v.updatedAt < new Date(Date.now() - 7 * 24 * 60 * 60 * 1000) ? {color: \"ff0066\"} : {color: \"#66ff00\"} }>\r\n                                <td>{v.scrollEquipment}</td>\r\n                                <td>{v.scrollStat}</td>\r\n                                {v.scrollPrice[0] < 1000000 ? <td>{(v.scrollPrice[0]/1000).toFixed(1) + \"K\"}</td> : <td>{(v.scrollPrice[0]/1000000).toFixed(1) + \"M\"}</td> }\r\n                                {v.scrollPrice[(v.scrollPrice.length - 1)/2] < 1000000 ? <td>{(v.scrollPrice[(v.scrollPrice.length - 1)/2]/1000).toFixed(1) + \"K\"}</td> : <td>{(v.scrollPrice[(v.scrollPrice.length - 1)/2]/1000000).toFixed(1) + \"M\"}</td> } \r\n                                {v.scrollPrice[v.scrollPrice.length - 1] < 1000000 ? <td>{(v.scrollPrice[v.scrollPrice.length - 1]/1000).toFixed(1) + \"K\"}</td> : <td>{(v.scrollPrice[v.scrollPrice.length - 1]/1000000).toFixed(1) + \"M\"}</td> } \r\n                                </tr>\r\n                            ]\r\n                        )}\r\n                    </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\nexport default HomePage","import React, {useState, useEffect}from 'react'\r\nimport \"../static/css/AdminPage.css\"\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Button from '@material-ui/core/Button'\r\nimport axios from 'axios'\r\nimport {navigate} from '@reach/router'\r\n\r\n\r\nconst AdminPage = (props) =>{\r\n    const [data, setData] = useState({\r\n        scrolls: []\r\n    }); \r\n    const onInputHandler = (e, i) =>{\r\n        e.preventDefault();\r\n        // console.log(e.target)\r\n        let a = data.scrolls.slice(); //creates the clone of the state\r\n        a[i][(e.target.name)] = e.target.value;\r\n        setData({scrolls: a});\r\n    }\r\n\r\n    function sendApiRequest(data) {\r\n        return axios.post(\"http://localhost:8000/api/scroll\", data, {withCredentials: true});\r\n    }\r\n\r\n    const onSubmitHandler = (e) =>{\r\n        e.preventDefault()\r\n        data.scrolls.forEach( async function(item, index){\r\n            await sendApiRequest(item)\r\n                .then(()=>{})\r\n                .catch()\r\n        })\r\n        setData({scrolls: []})\r\n    }\r\n    const addOneScroll = (e) =>{\r\n        e.preventDefault();\r\n        setData({scrolls: [...data.scrolls, {scrollEquipment: \"\", scrollStat : \"\", scrollSuccessRate: \"\", scrollPrice: \"\"}]})\r\n    }\r\n    return(\r\n        <>\r\n        <h1>Weclome Almighty Admin</h1>\r\n        <body style = {{display: \"flex\"}}>\r\n            <FormControl  class = \"form-group\" style = {{width: \"50%\", height: \"auto\"}}>\r\n            {data.scrolls.map((v, i) =>\r\n                   [\r\n                    <div key = {i} style = {{width: \"100%\", display: \"flex\", flexDirection: \"row\"}}>\r\n                    <TextField name = \"scrollEquipment\"   label=\"Equip\" onChange = {(e) => {onInputHandler(e, i)}}/>\r\n                    <TextField  name = \"scrollStat\"   label=\"Stat\" onChange = {(e) => {onInputHandler(e, i)}} />\r\n                    <TextField  name = \"scrollSuccessRate\"   label=\"%\"  onChange = {(e) => {onInputHandler(e, i)}}/>\r\n                    <TextField  name = \"scrollPrice\"  label=\"Price\"  onChange = {(e) => {onInputHandler(e, i)}}/>\r\n                </div>\r\n                   ]\r\n             )}\r\n            <Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\" onClick = {addOneScroll}>+</Button>\r\n            <Button onClick ={onSubmitHandler} variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">Submit</Button>\r\n            </FormControl>\r\n        </body>\r\n        </>\r\n    )\r\n}\r\nexport default AdminPage","import React, {useState} from 'react'\r\nimport ReactDOM from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"../static/css/AdminLoginForm.css\"\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\nimport AdminPage from '../views/AdminPage';\r\n\r\nexport default ({sendApiRequest}) =>{\r\n    const [state, setState] = useState({email: \"\", password: \"\", errors: []});\r\n    const [error, setError] = useState([])\r\n    const [auth, setAuth] = useState(false)\r\n    const onInputChangeHandler = (event) => {\r\n        const {name, value} = event.target;\r\n        console.log(event.target.value)\r\n        setState({\r\n            ...state,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const onFormSubmitHandler = (event) =>{\r\n        event.preventDefault();\r\n        setError([])\r\n        sendApiRequest(state)\r\n            .then((result) =>{\r\n                // console.log(result);\r\n                if('err' in result.data){\r\n                    setError(result.data.err);\r\n                }\r\n                // console.log(auth)\r\n                console.log(\"admin auth is \" + result.data.isAuth)\r\n                if('isAuth' in result.data){\r\n                    if(!result.data.isAuth){\r\n                        navigate(\"/\")\r\n                    }\r\n                    setAuth(result.data.isAuth)\r\n                }\r\n            })\r\n            .catch((err)=> console.log)\r\n    }\r\n    return(\r\n        <>\r\n        {error.map((x) =>\r\n                    <p style={{color: \"red\"}}>{x}</p>       \r\n        )}\r\n        <div>{!auth ?\r\n                <>\r\n                <h1>Admin Login</h1>\r\n                <form onSubmit = {onFormSubmitHandler}>\r\n                    <div className = \"form-group\">\r\n                        <label for=\"exampleInputEmail1\">Email address</label>\r\n                        <input onChange = {onInputChangeHandler} type=\"email\" name = \"email\" class=\"form-control\" value = {state.email} aria-describedby=\"emailHelp\"></input>\r\n                        <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputPassword1\">Password</label>\r\n                        <input onChange = {onInputChangeHandler} type=\"password\" name = \"password\" class=\"form-control\" value = {state.password}></input>\r\n                    </div>\r\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n                </form>\r\n                </> \r\n                :  <AdminPage></AdminPage>\r\n            }\r\n        </div>\r\n        </>\r\n     \r\n    )\r\n}","import React from 'react'\r\nimport AdminLoginForm from '../components/AdminLoginForm'\r\nimport \"../static/css/AdminLoginPage.css\"\r\nimport axios from 'axios'\r\n\r\nconst AdminPage = (props) =>{\r\n\r\n    function sendApiRequest(data) {\r\n        return axios.post(\"http://localhost:8000/login\", data, {withCredentials: true});\r\n    }\r\n    return(\r\n        <div id = \"body\">\r\n            <AdminLoginForm sendApiRequest = {sendApiRequest}></AdminLoginForm>\r\n        </div>\r\n    )\r\n}\r\nexport default AdminPage","import React from 'react'\r\n\r\nconst NotFound = (props) =>{\r\n    return(\r\n        <>\r\n        <h2>Oops can't find page</h2>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotFound","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport HomePage from './views/HomePage'\r\nimport AdminLoginPage from './views/AdminLoginPage'\r\nimport NotFoundPage from './views/NotFoundPage'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Router, Link} from \"@reach/router\"\r\nimport NotFound from './views/NotFoundPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n      <HomePage path=\"/\"></HomePage>\r\n      <AdminLoginPage path =\"/admin\"></AdminLoginPage>\r\n      <NotFound default/>\r\n     </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/Mushroom.2717ed70.png\";","module.exports = __webpack_public_path__ + \"static/media/Slime.b29de028.png\";"],"sourceRoot":""}